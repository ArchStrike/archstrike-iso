#!/usr/bin/env bash
DATE=$(date -I'date' | sed 's/-/./g;s/[0-9][0-9]$/01/g')
VER="archlinux-${DATE}"
ISO="${VER}-x86_64.iso"
URL="http://mirrors.acm.wpi.edu/archlinux/iso/${DATE}/${ISO}"

ISOPATH="/tmp/$ISO"
MOUNTPT="/mnt/$VER"
WORKDIR="/tmp/$VER"
SQUASHO="/tmp/squashfs-root"

# Check environment to verify the loop kernel module is loaded. If not loaded, attempt to load.
[[ -z "$(lsmod | grep loop)" ]] && {
    sudo modprobe loop
    [[ -z "$(lsmod | grep loop)" ]] && {
        printf "Could not find kernel module loop. Exiting with return code 1..." && exit 1
    }
}
printf "Starting work on Arch Linux ISOs (%s)...\n" "$DATE"
for ext in "" ".sig"; do
    if [[ ! -e "$ISOPATH$ext" ]]; then
        printf "Downloading the %s ISO release for Arch Linux...\n" "$DATE"
        curl "$URL$ext" -o "$ISOPATH$ext"
    else
        printf "Assuming that %s is okay to use...\n" "$ISOPATH$ext"
    fi
done
printf "Verifying signature of ISO...\n"
pacman-key -v "$ISOPATH.sig" || gpg --keyserver-options auto-key-retrieve --verify "$ISOPATH.sig" || exit 1
[[ ! -e "$MOUNTPT" ]] && sudo mkdir "$MOUNTPT"

[[ -z "$(mount -l -t iso9660 | grep ^$ISOPATH)" ]] && {
    printf "Mounting ISO to with cmd: %s %s %s\n" 'sudo mount -t iso9660 -o loop' "$ISOPATH" "$MOUNTPT"
    sudo mount -t iso9660 -o loop "$ISOPATH" "$MOUNTPT"
} || {
    printf "Assuming the ISO mount at %s is okay. Skipping mount command...\n" "$MOUNTPT"
}
[[ ! -e "$WORKDIR" ]] && mkdir "$WORKDIR"
cp -a "$MOUNTPT"/* "$WORKDIR"
cd "$WORKDIR/arch/x86_64" || exit 1
[[ -e "$SQUASHO" ]] && {
    RMLOG="/tmp/unsquashiso-rm.log"
    sudo rm -rvf "$SQUASHO" > "$RMLOG"
    printf "Recursively removed %s and logged the output to %s\n" "$SQUASHO" "$RMLOG"
}
unsquashfs -d "$SQUASHO" airootfs.sfs && sync
[[ -e "$SQUASHO" ]] && printf "Successfully unsquashed %s to '%s'\n" "$ISOPATH" "$SQUASHO"
exit 0
# vim:se ts=4 sw=4 et:
